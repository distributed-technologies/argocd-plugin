name: Build and Publish

on:
  push:
    branches: [main]
  pull_request: {}

jobs:
  version_increment_check:
    name: Container version increment check
    if: github.event_name == 'pull_request'
    uses: Energinet-DataHub/.github/.github/workflows/version-increment-check.yaml@main
    with:
      yaml_file: build.yaml
      yaml_path: container_version

  test_and_build:
    name: Build, test and release image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get container version
        id: get_semver
        uses: Energinet-DataHub/.github/.github/actions/get-semver@main
        with:
          yaml_file: build.yaml
          yaml_path: container_version

      - name: Generate image name
        id: create_image_name
        run: echo '::set-output name=image_name::ghcr.io/${{github.repository}}/helm-overdrive:${{ steps.get_semver.outputs.semver }}'

      - name: Build image 
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{ steps.create_image_name.outputs.image_name }}
          push: false

      - name: Test generator with additional yaml files
        shell: bash
        run: |
          docker run --env-file ./test/env_with_add.env --volume ${{ github.workspace }}/test:/plugin/test ${{ steps.create_image_name.outputs.image_name }} /plugin/generate_manifest.sh > res_with_add.yaml
          DIFF=$(diff res_with_add.yaml expected_with_add) 
          if [ "$DIFF" != "" ] 
          then
            echo "Image did not return the expected manifest"
            exit 1
          fi

      - name: Test generator without additional yaml files
        shell: bash
        run: |
          docker run --env-file ./test/env_without_add.env --volume ${{ github.workspace }}/test:/plugin/test ${{ steps.create_image_name.outputs.image_name }} /plugin/generate_manifest.sh > res_without_add.yaml
          DIFF=$(diff res_without_add.yaml expected_without_add) 
          if [ "$DIFF" != "" ] 
          then
            echo "Image did not return the expected manifest"
            exit 1
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish image
        shell: bash
        run: docker push ${{ steps.create_image_name.outputs.image_name }}

